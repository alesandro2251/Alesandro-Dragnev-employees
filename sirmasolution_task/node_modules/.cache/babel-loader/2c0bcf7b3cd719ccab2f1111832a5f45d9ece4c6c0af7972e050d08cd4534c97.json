{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alesa\\\\Desktop\\\\SirmaSolutions_Front-End_React js_Task\\\\sirmasolution_task\\\\src\\\\components\\\\dataCollecting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import Papa from 'papaparse'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataCollecting = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [file, setFile] = useState('');\n  const FileChange = e => {\n    //Takes the name of the file\n    if (e.target.files.length) {\n      const inputFile = e.target.files[0];\n\n      //Takes the format after spliting the 'text/{type of file} and checks if is 'Cvs'\n      const fileExtension = inputFile === null || inputFile === void 0 ? void 0 : inputFile.type.split(\"/\")[1];\n      if (fileExtension !== 'csv') {\n        alert('Input csv file !');\n      } else {\n        alert('correct');\n      }\n      setFile(inputFile);\n    }\n  };\n  const ShowData = () => {\n    console.log(1);\n    FileReader();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Upload file to check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: FileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ShowData,\n      children: \"Show data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DataCollecting, \"F4qODXyotVveLcAf+4MTZCbpEMA=\");\n_c = DataCollecting;\nexport default DataCollecting;\nvar _c;\n$RefreshReg$(_c, \"DataCollecting\");","map":{"version":3,"names":["React","useState","DataCollecting","data","setData","file","setFile","FileChange","e","target","files","length","inputFile","fileExtension","type","split","alert","ShowData","console","log","FileReader"],"sources":["C:/Users/alesa/Desktop/SirmaSolutions_Front-End_React js_Task/sirmasolution_task/src/components/dataCollecting.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// import Papa from 'papaparse'\r\n\r\nconst DataCollecting = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [file, setFile] = useState('');\r\n\r\n    const FileChange = (e) => {\r\n        //Takes the name of the file\r\n        if (e.target.files.length) {\r\n            const inputFile = e.target.files[0];\r\n\r\n        //Takes the format after spliting the 'text/{type of file} and checks if is 'Cvs'\r\n        const fileExtension = inputFile?.type.split(\"/\")[1];\r\n        if ( fileExtension !== 'csv') {\r\n            alert('Input csv file !');\r\n        }else{\r\n            alert('correct');\r\n        }\r\n        setFile(inputFile);\r\n    }\r\n}\r\n\r\n    const ShowData = () => {\r\n        console.log(1);\r\n\r\n        FileReader()\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <label>Upload file to check</label>\r\n        <input type='file' onChange={FileChange}/>\r\n        <button onClick={ShowData} >Show data</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DataCollecting;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;EAEzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,UAAU,GAAIC,CAAC,IAAK;IACtB;IACA,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,EAAE;MACvB,MAAMC,SAAS,GAAGJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;MAEvC;MACA,MAAMG,aAAa,GAAGD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnD,IAAKF,aAAa,KAAK,KAAK,EAAE;QAC1BG,KAAK,CAAC,kBAAkB,CAAC;MAC7B,CAAC,MAAI;QACDA,KAAK,CAAC,SAAS,CAAC;MACpB;MACAV,OAAO,CAACM,SAAS,CAAC;IACtB;EACJ,CAAC;EAEG,MAAMK,QAAQ,GAAG,MAAM;IACnBC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEdC,UAAU,EAAE;EAChB,CAAC;EAED,oBACA;IAAA,wBACI;MAAA,UAAO;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAQ,eACnC;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEb;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eAC1C;MAAQ,OAAO,EAAEU,QAAS;MAAA,UAAE;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5C;AAEV,CAAC;AAAA,GAlCKf,cAAc;AAAA,KAAdA,cAAc;AAoCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}