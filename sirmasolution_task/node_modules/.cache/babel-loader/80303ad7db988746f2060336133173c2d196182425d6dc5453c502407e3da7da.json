{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alesa\\\\Desktop\\\\SirmaSolutions_Front-End_React js_Task\\\\sirmasolution_task\\\\src\\\\components\\\\dataCollecting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Table from \"react-bootstrap/Table\";\nimport { Col, Button, Form } from \"react-bootstrap\";\nimport \"./dataCollecting.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataCollecting = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [file, setFile] = useState(\"\");\n  const FileChange = e => {\n    //Takes the name of the file\n    if (e.target.files.length) {\n      const inputFile = e.target.files[0];\n\n      //Takes the format after spliting the 'text/{type of file} and checks if is 'Cvs'\n      const fileExtension = inputFile === null || inputFile === void 0 ? void 0 : inputFile.type.split(\"/\")[1];\n      if (fileExtension !== \"csv\") {\n        alert(\"Input csv file !\");\n      }\n      setFile(inputFile);\n    }\n  };\n  const ShowData = () => {\n    //Parse the data in array\n    Papa.parse(file, {\n      header: true,\n      complete: results => {\n        setData(results.data);\n      }\n    });\n  };\n  const DaysWorkedCounter = (z, y) => {\n    if (z === \"\") {\n      console.log(0);\n    } else if (y === \"\") {\n      console.log(1);\n    } else {\n      const date = z.split(\"/\").reverse();\n      const date2 = y.split(\"/\").reverse();\n      let dateTo = 0;\n      if (date2.includes(\"NULL\")) {\n        dateTo = new Date();\n      } else {\n        dateTo = new Date(date2[0], date2[1], date2[2]);\n      }\n      const dateFrom = new Date(date[0], date[1], date[2]);\n      const daysCounted = Math.round((dateTo.getTime() - dateFrom.getTime()) / (1000 * 3600 * 24));\n      return daysCounted;\n    }\n  };\n  //   console.log(DaysWorkedCounter(data[1].DateFrom, data[1].DateTo))\n  //console.log(Math.round((data[1].DateFrom.split('/').reverse().getTime() - data[1].DateTo.split('/').reverse().getTime()) / (1000 * 3600 * 24)))\n\n  //   function a() {\n  //     let display = 0;\n  //     if (data.DateFrom === \"\" || data.DateTo === \"\") {\n  //       console.log(0);\n  //     } else {\n  //       const date = data.DateFrom.split(\"/\").reverse();\n  //       const date2 = data.DateTo.split(\"/\").reverse();\n  //       let dateTo = 0;\n\n  //       if (date2.includes(\"NULL\")) {\n  //         dateTo = new Date();\n  //       } else {\n  //         dateTo = new Date(date2[0], date2[1], date2[2]);\n  //       }\n\n  //       const dateFrom = new Date(date[0], date[1], date[2]);\n  //       const daysCounted = Math.round(\n  //         (dateTo.getTime() - dateFrom.getTime()) / (1000 * 3600 * 24)\n  //       );\n  //       display = daysCounted\n  //     }\n  //     return display;}\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"column g-0\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formFile\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Upload your CSV file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: FileChange,\n        accept: \".csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"button\",\n      variant: \"secondary\",\n      size: \"md\",\n      onClick: ShowData,\n      children: [\" \", \"Show data\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"secondary\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ProjectID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DataFrom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DataTo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DaysWorked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), data.map((data, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.EmpID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.ProjectID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.DateFrom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.DateTo === \"NULL\" ? \"Today\" : data.DateTo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(DataCollecting, \"0u1Nh2uZXOFO5RH6FhGqkgrqFsk=\");\n_c = DataCollecting;\nexport default DataCollecting;\nvar _c;\n$RefreshReg$(_c, \"DataCollecting\");","map":{"version":3,"names":["React","useState","Papa","Table","Col","Button","Form","DataCollecting","data","setData","file","setFile","FileChange","e","target","files","length","inputFile","fileExtension","type","split","alert","ShowData","parse","header","complete","results","DaysWorkedCounter","z","y","console","log","date","reverse","date2","dateTo","includes","Date","dateFrom","daysCounted","Math","round","getTime","map","index","EmpID","ProjectID","DateFrom","DateTo"],"sources":["C:/Users/alesa/Desktop/SirmaSolutions_Front-End_React js_Task/sirmasolution_task/src/components/dataCollecting.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Col, Button, Form } from \"react-bootstrap\";\r\n\r\nimport \"./dataCollecting.css\";\r\n\r\nconst DataCollecting = () => {\r\n  const [data, setData] = useState([]);\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const FileChange = (e) => {\r\n    //Takes the name of the file\r\n    if (e.target.files.length) {\r\n      const inputFile = e.target.files[0];\r\n\r\n      //Takes the format after spliting the 'text/{type of file} and checks if is 'Cvs'\r\n      const fileExtension = inputFile?.type.split(\"/\")[1];\r\n      if (fileExtension !== \"csv\") {\r\n        alert(\"Input csv file !\");\r\n      }\r\n      setFile(inputFile);\r\n    }\r\n  };\r\n\r\n  const ShowData = () => {\r\n    //Parse the data in array\r\n    Papa.parse(file, {\r\n      header: true,\r\n      complete: (results) => {\r\n        setData(results.data);\r\n      },\r\n    });\r\n  };\r\n\r\n  const DaysWorkedCounter = (z, y) => {\r\n    if (z === \"\") {\r\n      console.log(0);\r\n    } else if (y === \"\") {\r\n      console.log(1);\r\n    } else {\r\n      const date = z.split(\"/\").reverse();\r\n      const date2 = y.split(\"/\").reverse();\r\n      let dateTo = 0;\r\n\r\n      if (date2.includes(\"NULL\")) {\r\n        dateTo = new Date();\r\n      } else {\r\n        dateTo = new Date(date2[0], date2[1], date2[2]);\r\n      }\r\n\r\n      const dateFrom = new Date(date[0], date[1], date[2]);\r\n      const daysCounted = Math.round(\r\n        (dateTo.getTime() - dateFrom.getTime()) / (1000 * 3600 * 24)\r\n      );\r\n      return daysCounted;\r\n    }\r\n  };\r\n//   console.log(DaysWorkedCounter(data[1].DateFrom, data[1].DateTo))\r\n  //console.log(Math.round((data[1].DateFrom.split('/').reverse().getTime() - data[1].DateTo.split('/').reverse().getTime()) / (1000 * 3600 * 24)))\r\n\r\n\r\n//   function a() {\r\n//     let display = 0;\r\n//     if (data.DateFrom === \"\" || data.DateTo === \"\") {\r\n//       console.log(0);\r\n//     } else {\r\n//       const date = data.DateFrom.split(\"/\").reverse();\r\n//       const date2 = data.DateTo.split(\"/\").reverse();\r\n//       let dateTo = 0;\r\n\r\n//       if (date2.includes(\"NULL\")) {\r\n//         dateTo = new Date();\r\n//       } else {\r\n//         dateTo = new Date(date2[0], date2[1], date2[2]);\r\n//       }\r\n\r\n//       const dateFrom = new Date(date[0], date[1], date[2]);\r\n//       const daysCounted = Math.round(\r\n//         (dateTo.getTime() - dateFrom.getTime()) / (1000 * 3600 * 24)\r\n//       );\r\n//       display = daysCounted\r\n//     }\r\n//     return display;}\r\n\r\n\r\n  return (\r\n    <Col className=\"column g-0\">\r\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n        <Form.Label>Upload your CSV file</Form.Label>\r\n        <Form.Control type=\"file\" onChange={FileChange} accept=\".csv\" />\r\n      </Form.Group>\r\n      <Button\r\n        className=\"button\"\r\n        variant=\"secondary\"\r\n        size=\"md\"\r\n        onClick={ShowData}\r\n      >\r\n        {\" \"}\r\n        Show data{\" \"}\r\n      </Button>\r\n      <Table striped bordered hover variant=\"secondary\">\r\n        <thead>\r\n          <tr>\r\n            <th>Employee ID </th>\r\n            <th>ProjectID</th>\r\n            <th>DataFrom</th>\r\n            <th>DataTo</th>\r\n            <th>DaysWorked</th>\r\n          </tr>\r\n        </thead>\r\n        {data.map((data, index) => (\r\n          <tbody key={index}>\r\n            <tr>\r\n              <td>{data.EmpID}</td>\r\n              <td>{data.ProjectID}</td>\r\n              <td>{data.DateFrom}</td>\r\n              <td>{data.DateTo === \"NULL\" ? \"Today\" : data.DateTo}</td>\r\n              {/* <td>{DaysWorkedCounter(data.DateFrom, data.DateTo)}</td> */}\r\n            \r\n            </tr>\r\n          </tbody>\r\n        ))}\r\n      </Table>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default DataCollecting;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}